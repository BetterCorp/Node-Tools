stages:
  - version
  - build
  - test
  - publish

version:npm:
  image: node:lts-alpine
  tags:
    - build
    - docker
  stage: version
  before_script:
    - rm -rfv ./_exports
    - cat package.json | grep version
  script:
    - npm run version -- --branch="${CI_COMMIT_REF_NAME}"
  after_script:
    - cat package.json | grep version
  artifacts:
    paths:
      - _exports/*
      - package-lock.json
      - package.json
    expire_in: 1 week
    
build:npm:
  image: node:lts-alpine
  dependencies:
    - version:npm
  tags:
    - build
    - docker
  stage: build
  before_script:
    - cat package.json | grep version
    - rm -f ~/.npmrc ; rm -f ./.npmrc ; echo "//registry.npmjs.org/:_authToken=\${NPM2_TOKEN}" > ./.npmrc
    - npm i -g typescript ts-node
    - node -v
    - npm -v
    - tsc -v
    - ts-node -v
    - npm ci
  script:
    - npm run build
    - npm pack
  artifacts:
    paths:
      - _exports/*
      - "*.tgz"
      - package-lock.json
      - package.json
      - lib
    expire_in: 1 week

test:npm:
  image: node:lts-alpine
  tags:
    - build
    - docker
  stage: test
  dependencies:
    - build:npm
  before_script:
    - npm ci
  script:
    - npm run test
  artifacts:
    paths:
      - junit.xml
    expire_in: 1 week
    when: always
    reports:
      junit:
        - junit.xml

publish:npm:
  image: node:lts-alpine
  dependencies:
    - build:npm
    - test:npm
  rules:
    - if: '$CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH'
      when: on_success
    #- if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH'
    #  when: on_success
    - when: never
  tags:
    - build
    - docker
  stage: publish
  before_script:
    - cat package.json | grep version
    - rm -f ~/.npmrc ; rm -f ./.npmrc ; echo "//registry.npmjs.org/:_authToken=\${NPM2_TOKEN_PUB}" > ./.npmrc
  script:
    - npm publish
    - echo RUN PUBLISH
    - cat package.json